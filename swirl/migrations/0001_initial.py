# Generated by Django 5.1.1 on 2024-09-27 13:26

import django.db.models.deletion
import swirl.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Authenticator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Search',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('query_string', models.CharField(default=str, max_length=256)),
                ('query_string_processed', models.CharField(blank=True, default=str, max_length=256)),
                ('sort', models.CharField(blank=True, default='relevancy', max_length=50)),
                ('results_requested', models.IntegerField(default=10)),
                ('searchprovider_list', models.JSONField(blank=True, default=list)),
                ('subscribe', models.BooleanField(default=False)),
                ('status', models.CharField(default='NEW_SEARCH', max_length=50)),
                ('time', models.FloatField(default=0.0)),
                ('pre_query_processors', models.JSONField(blank=True, default=swirl.models.getSearchPreQueryProcessorsDefault)),
                ('post_result_processors', models.JSONField(blank=True, default=swirl.models.getSearchPostResultProcessorsDefault)),
                ('result_url', models.CharField(blank=True, default='/swirl/results?search_id=%d&result_mixer=%s', max_length=2048)),
                ('new_result_url', models.CharField(blank=True, default='/swirl/results?search_id=%d&result_mixer=RelevancyNewItemsMixer', max_length=2048)),
                ('messages', models.JSONField(blank=True, default=list)),
                ('result_mixer', models.CharField(choices=[('DateMixer', 'DateMixer'), ('DateNewItemsMixer', 'DateNewItemsMixer'), ('RelevancyMixer', 'RelevancyMixer'), ('RelevancyNewItemsMixer', 'RelevancyNewItemsMixer'), ('RoundRobinMixer', 'RoundRobinMixer'), ('Stack1Mixer', 'Stack1Mixer'), ('Stack2Mixer', 'Stack2Mixer'), ('Stack3Mixer', 'Stack3Mixer'), ('StackNMixer', 'StackNMixer')], default='RelevancyMixer', max_length=200)),
                ('retention', models.IntegerField(choices=[(0, 'Never expire'), (1, 'Expire after 1 hour'), (2, 'Expire after 1 day'), (3, 'Expire after 1 month')], default=0)),
                ('tags', models.JSONField(default=list)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_updated'],
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('provider_id', models.IntegerField(default=0)),
                ('searchprovider', models.CharField(default=str, max_length=50)),
                ('query_string_to_provider', models.CharField(default=str, max_length=256)),
                ('result_processor_json_feedback', models.JSONField(default=list)),
                ('query_to_provider', models.CharField(default=str, max_length=2048)),
                ('query_processors', models.JSONField(blank=True, default=list)),
                ('result_processors', models.JSONField(blank=True, default=list)),
                ('messages', models.JSONField(blank=True, default=list)),
                ('status', models.CharField(default=str, max_length=20)),
                ('retrieved', models.IntegerField(default=0)),
                ('found', models.IntegerField(default=0)),
                ('time', models.FloatField(default=0.0)),
                ('json_results', models.JSONField(default=list)),
                ('tags', models.JSONField(default=list)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('search_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swirl.search')),
            ],
            options={
                'ordering': ['-date_updated'],
            },
        ),
        migrations.CreateModel(
            name='SearchProvider',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('shared', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('default', models.BooleanField(default=True)),
                ('authenticator', models.CharField(blank=True, choices=[('Microsoft', 'Microsoft Authentication')], default='', max_length=200)),
                ('connector', models.CharField(choices=[('ChatGPT', 'ChatGPT Query String'), ('GenAI', 'Generative AI'), ('RequestsGet', 'HTTP/GET returning JSON'), ('RequestsPost', 'HTTP/POST returning JSON'), ('Elastic', 'Elasticsearch Query String'), ('OpenSearch', 'OpenSearch Query String'), ('QdrantDB', 'QdrantDB'), ('BigQuery', 'Google BigQuery'), ('Sqlite3', 'Sqlite3'), ('M365OutlookMessages', 'M365 Outlook Messages'), ('M365OneDrive', 'M365 One Drive'), ('M365OutlookCalendar', 'M365 Outlook Calendar'), ('M365SharePointSites', 'M365 SharePoint Sites'), ('MicrosoftTeams', 'Microsoft Teams'), ('MongoDB', 'MongoDB'), ('Oracle', 'Oracle'), ('Snowflake', 'Snowflake'), ('PineconeDB', 'PineconeDB')], default='RequestsGet', max_length=200)),
                ('url', models.CharField(blank=True, default=str, max_length=2048)),
                ('query_template', models.CharField(blank=True, default='{url}?q={query_string}', max_length=2048)),
                ('query_template_json', models.JSONField(blank=True, default={})),
                ('post_query_template', models.JSONField(blank=True, default={})),
                ('query_processors', models.JSONField(blank=True, default=swirl.models.getSearchProviderQueryProcessorsDefault)),
                ('query_mappings', models.CharField(blank=True, default=str, max_length=2048)),
                ('response_mappings', models.CharField(blank=True, default=str, max_length=2048)),
                ('result_grouping_field', models.CharField(blank=True, default=str, max_length=1024)),
                ('result_processors', models.JSONField(blank=True, default=swirl.models.getSearchProviderResultProcessorsDefault)),
                ('result_mappings', models.CharField(blank=True, default=str, max_length=2048)),
                ('results_per_query', models.IntegerField(default=10)),
                ('eval_credentials', models.CharField(blank=True, default=str, max_length=100)),
                ('credentials', models.CharField(blank=True, default=str, max_length=512)),
                ('tags', models.JSONField(default=list)),
                ('http_request_headers', models.JSONField(blank=True, default={})),
                ('page_fetch_config_json', models.JSONField(blank=True, default={})),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='OauthToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idp', models.CharField(default='Microsoft', max_length=32)),
                ('token', models.CharField(max_length=4096)),
                ('refresh_token', models.CharField(blank=True, max_length=4096, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('owner', 'idp')},
            },
        ),
        migrations.CreateModel(
            name='QueryTransform',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('shared', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('qrx_type', models.CharField(choices=[('rewrite', 'Rewrite'), ('synonym', 'Synonym'), ('bag', 'Synonym Bag')], default='rewrite', max_length=64)),
                ('config_content', models.TextField()),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('name', 'qrx_type')},
            },
        ),
    ]
